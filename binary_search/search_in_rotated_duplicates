//brute force like linear search
//tc-o(n)
class Solution {
public:
    bool search(vector<int>& nums, int target) {
        for(int i=0;i<nums.size();i++){
            if(nums[i]==target){
                return true;
            }
        }
        return false;
    }
};

//optimal solution 
//tc-log(n)(similar to non duplicated array but a edge case added where low=high=mid)
class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int n=nums.size();
        int low=0;
        int high=n-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(nums[mid]==target){
                return true;
            }
            //for 
            if(nums[mid]==nums[low] && nums[mid]==nums[high]){
                   low++;
                   high--;
            }
            //right array sorted
           else if(nums[mid]<=nums[high]){
                if(target>=nums[mid] && target<=nums[high]){
                    low=mid+1;
                }
                else{
                    high=mid-1;
                }
            }
            //left array sorted
            else if(nums[mid]>=nums[low]){
            if(target>=nums[low] && target<=nums[mid]){
                high=mid-1;
               }
               else{
                low=mid+1;
               }
            }
        }
        return false;
    }
};